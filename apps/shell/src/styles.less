body {
    --color-black: rgba(0,0,0,.8);
    --color-white: #e0e5ec;
    --radius: .25rem;

    font-family: 'Arial', sans-serif;
    font-size: 16px;
    color: var(--color-black);
}

h1,h2,h3 {
    margin: 0;
}

button {
    outline: none;
    width: 130px;
    height: 40px;
    padding: 10px 25px;
    border: 2px solid var(--color-black);
    font-family: 'Lato', sans-serif;
    font-weight: 500;
    background: transparent;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    display: inline-block;
    border-radius: var(--radius);

    background: var(--color-black);;
    color: white;
    z-index: 1;

    &:after {
        position: absolute;
        content: "";
        width: 0;
        height: 100%;
        top: 0;
        left: 0;
        direction: rtl;
        z-index: -1;
        background: var(--color-white);
        transition: all 0.3s ease;
    }

    &:hover {
        color: var(--color-black);
    }

    &:hover:after {
        left: auto;
        right: 0;
        width: 100%;
    }

    &:active {
        top: 2px;
    }
}

.remote {
    min-height: 256px;
    padding: .25rem;
    background: white;
    border: dashed 2px var(--color-black);
    border-radius: var(--radius);
}

@sizes: 16;
@space: 4px;

.generate-space(@direction, @i: 0) when (@i =< @sizes) {
    .generate-space(@direction, @i + 1);

    &_@{direction}-@{i} {
        & when (@direction = all) {
            margin: @space * @i;
        }

        & when (@direction = top) {
            margin-top: @space * @i;
        }

        & when (@direction = bottom) {
            margin-bottom: @space * @i;
        }

        & when (@direction = vertical) {
            margin-top: @space * @i;
            margin-bottom: @space * @i;
        }

        & when (@direction = left) {
            margin-left: @space * @i;
        }

        & when (@direction = right) {
            margin-right: @space * @i;
        }

        & when (@direction = horizontal) {
            margin-right: @space * @i;
            margin-left: @space * @i;
        }
    }
}

.space {
    .generate-space(all);
    .generate-space(top);
    .generate-space(bottom);
    .generate-space(vertical);
    .generate-space(left);
    .generate-space(right);
    .generate-space(horizontal);

    &_auto {
        margin-left: auto;
        margin-right: auto;
    }

    &_auto-right {
        margin-right: auto;
    }

    &_auto-left {
        margin-left: auto;
    }
}
