name: mnr-crm ci/cd



on:
    push:
        branches:
            - main

jobs:
    install:
        runs-on: ubuntu-latest
        steps:
            -   name: checkout
                uses: actions/checkout@v3
            -   name: caching
                id: caching
                uses: actions/cache@v3
                with:
                    path: node_modules
                    key: node-modules-${{ hashFiles('package-lock.json') }}
            -   if: ${{ steps.caching.outputs.cache-hit != 'true' }}
                name: install
                run: npm ci

    affected:
        runs-on: ubuntu-latest
        needs: install
        outputs:
            affected: ${{ steps.affected.outputs.projects }}
            vars: ${{ steps.vars.outputs.test }}
        steps:
            -   name: checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 5
            -   name: restore cache
                id: cache-node-modules
                uses: actions/cache@v3
                with:
                    path: node_modules
                    key: node-modules-${{ hashFiles('package-lock.json') }}
            -   name: show
                run: npx nx print-affected --type=app --select=projects --base=main~1
            -   name: vars
                run: echo "test=world" >> $GITHUB_OUTPUT
            -   name: affected
                run: echo "projects=$(npx nx print-affected --type=app --select=projects --base=main~1)" >> $GITHUB_OUTPUT

    print:
        runs-on: ubuntu-latest
        needs: affected
        steps:
            -   name: Get affected var
                run: echo "affected:${{needs.affected.outputs.affected}}"
            -   name: Check vars
                run: echo "vars:${{needs.affected.outputs.vars}}"







