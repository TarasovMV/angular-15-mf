name: mfe ci/cd

on:
    push:
        branches:
            - main

jobs:
    install:
        runs-on: ubuntu-latest
        steps:
            -   name: checkout
                uses: actions/checkout@v3
            -   name: caching
                id: caching
                uses: actions/cache@v3
                with:
                    path: node_modules
                    key: node-modules-${{ hashFiles('package-lock.json') }}
            -   if: ${{ steps.caching.outputs.cache-hit != 'true' }}
                name: install
                run: npm ci

    affected:
        runs-on: ubuntu-latest
        needs: install
        outputs:
            affected: ${{ steps.affected.outputs.projects }}
        steps:
            -   name: checkout
                uses: actions/checkout@v3
                with:
                    fetch-depth: 5
            -   name: restore cache
                id: cache-node-modules
                uses: actions/cache@v3
                with:
                    path: node_modules
                    key: node-modules-${{ hashFiles('package-lock.json') }}
            -   name: show
                run: npx nx print-affected --type=app --select=projects --base=main~1
            -   name: affected
                id: affected
                run: echo "projects=$(npx nx print-affected --type=app --select=projects --base=main~1)" >> $GITHUB_OUTPUT

    shell:
        needs: affected
        if: ${{ contains(needs.affected.outputs.affected, 'shell') }}
        uses: ./.github/workflows/app-build-deploy.yml
        with:
            app-name: 'shell'
            docker-path: 'apps/shell/Dockerfile'
            deploy-port: '3000'
        secrets: inherit

    mfe1:
        needs: affected
        if: ${{ contains(needs.affected.outputs.affected, 'mfe1') }}
        runs-on: ubuntu-latest
        steps:
            -   name: success
                run: echo "success"

    mfe2:
        needs: affected
        if: ${{ contains(needs.affected.outputs.affected, 'mfe2') }}
        runs-on: ubuntu-latest
        steps:
            -   name: success
                run: echo "success"









