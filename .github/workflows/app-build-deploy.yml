name: Shared workflow build and deploy

on:
    workflow_call:
        inputs:
            app-name:
                required: true
                type: string
            docker-path:
                required: true
                type: string
            deploy-port:
                required: true
                type: string
        secrets:
            DOCKERHUB_USERNAME:
                required: true
            DOCKERHUB_TOKEN:
                required: true
            SSH_HOST:
                required: true
            SSH_PRIVATE_KEY:
                required: true

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            -   name: checkout
                uses: actions/checkout@v3
            -   name: restore cache
                id: cache-node-modules
                uses: actions/cache@v3
                with:
                    path: node_modules
                    key: node-modules-${{ hashFiles('package-lock.json') }}
            -   name: build
                run: npx nx build ${{ inputs.app-name }}
            -   name: docker login
                uses: docker/login-action@v2
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}
            -   name: build and push
                uses: docker/build-push-action@v3
                with:
                    context: .
                    push: true
                    tags: ${{ secrets.DOCKERHUB_USERNAME }}/mf-${{ inputs.app-name }}
                    platforms: linux/amd64
                    file: ${{ inputs.docker-path }}
            -   name: deploy by ssh
                uses: garygrossgarten/github-action-ssh@release
                with:
                    username: root
                    host: ${{ secrets.SSH_HOST }}
                    privateKey: ${{ secrets.SSH_PRIVATE_KEY}}
                    command: |
                        docker stop mf-${{ inputs.app-name }}-container
                        docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/mf-${{ inputs.app-name }}:latest
                        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mf-${{ inputs.app-name }}
                        docker run -d -p${{ inputs.deploy-port }}:80 --name mf-${{ inputs.app-name }}-container --rm ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.app-name }}
